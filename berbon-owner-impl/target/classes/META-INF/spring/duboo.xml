<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->  
    <dubbo:application name="duboo_provider" />  
  
    <!-- 使用zookeeper注册中心暴露服务地址 -->  
    <!-- <dubbo:registry address="multicast://224.5.6.7:1234" /> -->  
   <!--  zookeeper://10.2.50.36:2181?backup=10.2.50.37:2181,10.2.50.38:2181 -->
    <dubbo:registry address="${duboo.zookeeper.address}" />
   
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="${duboo.server.port}" /> 
    
       <!-- 声明需要暴露的服务接口 -->  
    <dubbo:service interface="berbon.owner.facade.UserFacade" ref="userFacadeImpl" />  
  
    <!-- 生成远程服务代理，可以像使用本地bean一样使用demoService -->  
  <!--   <dubbo:reference id="demoService"  
        interface="com.unj.dubbotest.provider.DemoService" />   -->
  
</beans>  